에폭 버전 4는 포기함, 너무 학습 속도가 느림.
원인은 너무 낮은 학습률 때문이었던 것 같음...

#셀, 표, 행, 열이 담긴 데이터셋
#https://drive.google.com/file/d/1_cc88PAvaFxMmka1quSMEuFEn33A3YW0/view?usp=sharing

설정
# 체크포인트 관련 설정
cfg = Config.fromfile('configs/rtmdet/rtmdet_s_8xb32-300e_coco.py')
cfg.resume = True
cfg.max_epochs = 50  # 최대 에폭 수 설정
cfg.train_cfg = dict(type='EpochBasedTrainLoop', max_epochs=cfg.max_epochs, val_interval=5)
cfg.val_cfg = dict(type='ValLoop')
cfg.test_cfg = dict(type='TestLoop')

cfg.optim_wrapper.accumulative_counts = 2  # 2번의 작은 배치를 누적
cfg.train_dataloader.batch_size = 28
cfg.val_dataloader.batch_size = 28
cfg.test_dataloader = cfg.val_dataloader
cfg.env_cfg = dict(cudnn_benchmark=True)

# 데이터셋 설정
# 데이터 루트 경로 설정
cfg.data_root = '/content/rtmdet_dataset/'

# 훈련 데이터셋 설정
cfg.train_dataloader.dataset.ann_file = cfg.data_root + 'train/train_annotations.json'
cfg.train_dataloader.dataset.data_root = cfg.data_root + 'train/'
cfg.train_dataloader.dataset.data_prefix = dict(img='images/')

# 검증 데이터셋 설정
cfg.val_dataloader.dataset.ann_file = cfg.data_root + 'val/val_annotations.json'
cfg.val_dataloader.dataset.data_root = cfg.data_root + 'val/'
cfg.val_dataloader.dataset.data_prefix = dict(img='images/')
# 클래스 설정
cfg.model.bbox_head.num_classes = 8  # 클래스 수에 맞게 설정

# 작업 디렉토리 설정
cfg.work_dir = '/content/drive/MyDrive/rtmdet_table_detection'

# 로깅 및 체크포인트 설정
cfg.default_hooks.checkpoint = dict(type='CheckpointHook', interval=1, save_best='auto', max_keep_ckpts=4)
cfg.default_hooks.early_stopping = dict(type='EarlyStoppingHook', monitor='coco/bbox_mAP', patience=5)

cfg.default_hooks.logger = dict(type='LoggerHook', interval=50)
cfg.train_dataloader.num_workers = 2
cfg.val_dataloader.num_workers = 2
cfg.test_dataloader.num_workers = 2
# 평가 설정
cfg.val_evaluator = dict(type='CocoMetric', metric='bbox')
cfg.test_evaluator = cfg.val_evaluator

# 데이터셋 타입 및 메타 정보 설정
cfg.train_dataloader.dataset.type = 'CustomTableDataset'
cfg.val_dataloader.dataset.type = 'CustomTableDataset'
cfg.test_dataloader.dataset.type = 'CustomTableDataset'
classes = ('cell', 'table', 'row', 'column', 'merged_cell', 'overflow_cell', 'header_row', 'header_column')
cfg.train_dataloader.dataset.metainfo = dict(classes=classes)
cfg.val_dataloader.dataset.metainfo = dict(classes=classes)
cfg.test_dataloader.dataset.metainfo = dict(classes=classes)

# 테스트 데이터셋 설정
cfg.test_dataloader = cfg.val_dataloader
cfg.val_evaluator = dict(
    type='CocoMetric',
    ann_file=cfg.val_dataloader.dataset.ann_file,
    metric=['bbox'],
    classwise=True,  # 클래스별 결과를 출력하도록 설정
    format_only=False
)
cfg.test_evaluator = cfg.val_evaluator


# AMP 및 학습률 설정
cfg.amp = True
cfg.optim_wrapper.optimizer.lr = 0.00375  # (0.004 * 28/32)
cfg.optim_wrapper.optimizer.weight_decay = 0.02
cfg.param_scheduler = [
    dict(
        type='LinearLR',
        start_factor=1.0e-5,
        by_epoch=False,
        begin=0,
        end=1000),
    dict(
        type='CosineAnnealingLR',
        eta_min=cfg.optim_wrapper.optimizer.lr * 0.05,
        begin=1000,
        end=300000,
        T_max=300000,
        by_epoch=False)
]


cfg.work_dir = '/content/drive/MyDrive/rtmdet_table_detection'
# 데이터 증강 설정
cfg.train_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        type='RandomResize',
        scale=(1280, 1280),
        ratio_range=(0.5, 1.5),
        keep_ratio=True),
  dict(
      type='RandomAffine',
      scaling_ratio_range=(0.5, 1.5),  # 테이블 구조를 유지하면서 다양한 크기 제공
      border=(-128, -128),  # 테이블이 잘리는 것을 최소화
      max_rotate_degree=5,  # 약간의 회전만 허용
      max_translate_ratio=0.1,  # 이미지의 10% 범위 내에서 이동 허용
  ),
    dict(type='YOLOXHSVRandomAug', prob=0.5),
    dict(type='YOLOXCopyPaste', prob=0.3),
    dict(type='RandomFlip', prob=0.5),
    dict(
        type='Pad',
        size=(1024, 1024),
        pad_val=dict(img=(114, 114, 114))),
    dict(type='PackDetInputs')
]
cfg.model.bbox_head.loss_cls = dict(
    type='QualityFocalLoss',
    use_sigmoid=True,
    beta=2.5,
    loss_weight=1.0
)

학습률: 0.00375 (배치 사이즈에 맞춰서)
DONE (t=5.46s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.203
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.263
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.250
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.854
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.211
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.215
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.224
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.224
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.884
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.223
10/20 09:52:04 - mmengine - INFO - 
+---------------+-------+--------+--------+-------+-------+-------+
| category      | mAP   | mAP_50 | mAP_75 | mAP_s | mAP_m | mAP_l |
+---------------+-------+--------+--------+-------+-------+-------+
| cell          | 0.818 | 0.99   | 0.978  | nan   | 0.854 | 0.816 |
| table         | 0.0   | 0.0    | 0.0    | nan   | nan   | 0.0   |
| row           | 0.0   | 0.0    | 0.0    | nan   | nan   | 0.0   |
| column        | 0.028 | 0.063  | 0.023  | nan   | nan   | 0.028 |
| merged_cell   | nan   | nan    | nan    | nan   | nan   | nan   |
| overflow_cell | nan   | nan    | nan    | nan   | nan   | nan   |
| header_row    | nan   | nan    | nan    | nan   | nan   | nan   |
| header_column | nan   | nan    | nan    | nan   | nan   | nan   |
+---------------+-------+--------+--------+-------+-------+-------+
10/20 09:52:04 - mmengine - INFO - bbox_mAP_copypaste: 0.203 0.263 0.250 -1.000 0.854 0.211
10/20 09:52:04 - mmengine - INFO - Epoch(val) [5][36/36]    coco/cell_precision: 0.8180  coco/table_precision: 0.0000  coco/row_precision: 0.0000  coco/column_precision: 0.0280  coco/merged_cell_precision: nan  coco/overflow_cell_precision: nan  coco/header_row_precision: nan  coco/header_column_precision: nan  coco/bbox_mAP: 0.2030  coco/bbox_mAP_50: 0.2630  coco/bbox_mAP_75: 0.2500  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.8540  coco/bbox_mAP_l: 0.2110  data_time: 0.0881  time: 0.9252


 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.396
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.482
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.456
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.917
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.405
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.411
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.420
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.420
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.939
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.420
10/20 10:46:38 - mmengine - INFO - 
+---------------+-------+--------+--------+-------+-------+-------+
| category      | mAP   | mAP_50 | mAP_75 | mAP_s | mAP_m | mAP_l |
+---------------+-------+--------+--------+-------+-------+-------+
| cell          | 0.931 | 0.99   | 0.99   | nan   | 0.917 | 0.932 |
| table         | 0.0   | 0.0    | 0.0    | nan   | nan   | 0.0   |
| row           | 0.011 | 0.019  | 0.01   | nan   | nan   | 0.011 |
| column        | 0.676 | 0.92   | 0.822  | nan   | nan   | 0.676 |
| merged_cell   | nan   | nan    | nan    | nan   | nan   | nan   |
| overflow_cell | nan   | nan    | nan    | nan   | nan   | nan   |
| header_row    | nan   | nan    | nan    | nan   | nan   | nan   |
| header_column | nan   | nan    | nan    | nan   | nan   | nan   |
+---------------+-------+--------+--------+-------+-------+-------+
10/20 10:46:38 - mmengine - INFO - bbox_mAP_copypaste: 0.396 0.482 0.456 -1.000 0.917 0.405
10/20 10:46:38 - mmengine - INFO - Epoch(val) [10][36/36]    coco/cell_precision: 0.9310  coco/table_precision: 0.0000  coco/row_precision: 0.0110  coco/column_precision: 0.6760  coco/merged_cell_precision: nan  coco/overflow_cell_precision: nan  coco/header_row_precision: nan  coco/header_column_precision: nan  coco/bbox_mAP: 0.3960  coco/bbox_mAP_50: 0.4820  coco/bbox_mAP_75: 0.4560  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.9170  coco/bbox_mAP_l: 0.4050  data_time: 0.0994  time: 0.9928

 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.447
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.522
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.497
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.926
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.455
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.471
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.480
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.480
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.948
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.481
10/20 11:42:37 - mmengine - INFO - 
+---------------+-------+--------+--------+-------+-------+-------+
| category      | mAP   | mAP_50 | mAP_75 | mAP_s | mAP_m | mAP_l |
+---------------+-------+--------+--------+-------+-------+-------+
| cell          | 0.94  | 0.99   | 0.99   | nan   | 0.926 | 0.941 |
| table         | 0.0   | 0.0    | 0.0    | nan   | nan   | 0.0   |
| row           | 0.047 | 0.117  | 0.029  | nan   | nan   | 0.047 |
| column        | 0.832 | 0.98   | 0.97   | nan   | nan   | 0.832 |
| merged_cell   | nan   | nan    | nan    | nan   | nan   | nan   |
| overflow_cell | nan   | nan    | nan    | nan   | nan   | nan   |
| header_row    | nan   | nan    | nan    | nan   | nan   | nan   |
| header_column | nan   | nan    | nan    | nan   | nan   | nan   |
+---------------+-------+--------+--------+-------+-------+-------+
10/20 11:42:37 - mmengine - INFO - bbox_mAP_copypaste: 0.447 0.522 0.497 -1.000 0.926 0.455
10/20 11:42:37 - mmengine - INFO - Epoch(val) [15][36/36]    coco/cell_precision: 0.9400  coco/table_precision: 0.0000  coco/row_precision: 0.0470  coco/column_precision: 0.8320  coco/merged_cell_precision: nan  coco/overflow_cell_precision: nan  coco/header_row_precision: nan  coco/header_column_precision: nan  coco/bbox_mAP: 0.4470  coco/bbox_mAP_50: 0.5220  coco/bbox_mAP_75: 0.4970  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.9260  coco/bbox_mAP_l: 0.4550  data_time: 0.0917  time: 0.8618


 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.647
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.720
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.708
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.928
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.656
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.664
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.673
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.673
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.953
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.673
10/20 12:37:01 - mmengine - INFO - 
+---------------+-------+--------+--------+-------+-------+-------+
| category      | mAP   | mAP_50 | mAP_75 | mAP_s | mAP_m | mAP_l |
+---------------+-------+--------+--------+-------+-------+-------+
| cell          | 0.958 | 0.99   | 0.99   | nan   | 0.928 | 0.96  |
| table         | 0.0   | 0.001  | 0.0    | nan   | nan   | 0.0   |
| row           | 0.748 | 0.91   | 0.862  | nan   | nan   | 0.748 |
| column        | 0.914 | 0.98   | 0.98   | nan   | nan   | 0.914 |
| merged_cell   | nan   | nan    | nan    | nan   | nan   | nan   |
| overflow_cell | nan   | nan    | nan    | nan   | nan   | nan   |
| header_row    | nan   | nan    | nan    | nan   | nan   | nan   |
| header_column | nan   | nan    | nan    | nan   | nan   | nan   |
+---------------+-------+--------+--------+-------+-------+-------+
10/20 12:37:01 - mmengine - INFO - bbox_mAP_copypaste: 0.647 0.720 0.708 -1.000 0.928 0.656
10/20 12:37:02 - mmengine - INFO - Epoch(val) [20][36/36]    coco/cell_precision: 0.9580  coco/table_precision: 0.0000  coco/row_precision: 0.7480  coco/column_precision: 0.9140  coco/merged_cell_precision: nan  coco/overflow_cell_precision: nan  coco/header_row_precision: nan  coco/header_column_precision: nan  coco/bbox_mAP: 0.6470  coco/bbox_mAP_50: 0.7200  coco/bbox_mAP_75: 0.7080  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.9280  coco/bbox_mAP_l: 0.6560  data_time: 0.0743  time: 0.8583

셀 -> 열 -> 행 순으로 인식률이 상승하였음. 순서대로 학습 되는 중?


계속 학습 진행

 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.739
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.824
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.800
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.942
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.748
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.764
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.773
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.773
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.964
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.773
10/20 14:47:50 - mmengine - INFO - 
+---------------+-------+--------+--------+-------+-------+-------+
| category      | mAP   | mAP_50 | mAP_75 | mAP_s | mAP_m | mAP_l |
+---------------+-------+--------+--------+-------+-------+-------+
| cell          | 0.955 | 0.99   | 0.99   | nan   | 0.942 | 0.955 |
| table         | 0.228 | 0.334  | 0.263  | nan   | nan   | 0.228 |
| row           | 0.889 | 0.988  | 0.968  | nan   | nan   | 0.889 |
| column        | 0.918 | 0.984  | 0.98   | nan   | nan   | 0.918 |
| merged_cell   | nan   | nan    | nan    | nan   | nan   | nan   |
| overflow_cell | nan   | nan    | nan    | nan   | nan   | nan   |
| header_row    | nan   | nan    | nan    | nan   | nan   | nan   |
| header_column | nan   | nan    | nan    | nan   | nan   | nan   |
+---------------+-------+--------+--------+-------+-------+-------+
10/20 14:47:50 - mmengine - INFO - bbox_mAP_copypaste: 0.739 0.824 0.800 -1.000 0.942 0.748
10/20 14:47:50 - mmengine - INFO - Epoch(val) [30][36/36]    coco/cell_precision: 0.9550  coco/table_precision: 0.2280  coco/row_precision: 0.8890  coco/column_precision: 0.9180  coco/merged_cell_precision: nan  coco/overflow_cell_precision: nan  coco/header_row_precision: nan  coco/header_column_precision: nan  coco/bbox_mAP: 0.7390  coco/bbox_mAP_50: 0.8240  coco/bbox_mAP_75: 0.8000  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.9420  coco/bbox_mAP_l: 0.7480  data_time: 0.0968  time: 0.9578


표 인식률 상승, 하지만 표 자체는 4000개 밖에 없어서 여기서 멈추고 데이터 추가 후 학습을 진행하였음

Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.873
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.960
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.905
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.962
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.881
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.893
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.902
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.902
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.974
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.902
10/20 16:42:50 - mmengine - INFO - 
+---------------+-------+--------+--------+-------+-------+-------+
| category      | mAP   | mAP_50 | mAP_75 | mAP_s | mAP_m | mAP_l |
+---------------+-------+--------+--------+-------+-------+-------+
| cell          | 0.978 | 0.99   | 0.99   | nan   | 0.962 | 0.979 |
| table         | 0.64  | 0.863  | 0.648  | nan   | nan   | 0.64  |
| row           | 0.932 | 0.996  | 0.99   | nan   | nan   | 0.932 |
| column        | 0.972 | 0.99   | 0.99   | nan   | nan   | 0.972 |
| merged_cell   | nan   | nan    | nan    | nan   | nan   | nan   |
| overflow_cell | nan   | nan    | nan    | nan   | nan   | nan   |
| header_row    | nan   | nan    | nan    | nan   | nan   | nan   |
| header_column | nan   | nan    | nan    | nan   | nan   | nan   |
+---------------+-------+--------+--------+-------+-------+-------+
10/20 16:42:50 - mmengine - INFO - bbox_mAP_copypaste: 0.873 0.960 0.905 -1.000 0.962 0.881
10/20 16:42:51 - mmengine - INFO - Epoch(val) [35][72/72]    coco/cell_precision: 0.9780  coco/table_precision: 0.6400  coco/row_precision: 0.9320  coco/column_precision: 0.9720  coco/merged_cell_precision: nan  coco/overflow_cell_precision: nan  coco/header_row_precision: nan  coco/header_column_precision: nan  coco/bbox_mAP: 0.8730  coco/bbox_mAP_50: 0.9600  coco/bbox_mAP_75: 0.9050  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.9620  coco/bbox_mAP_l: 0.8810  data_time: 0.0760  time: 0.9545S

굿굿, 이후로 병합, 오버플로, 헤더 행 열 추가함


Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.897
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.946
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.934
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.786
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.901
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.955
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.959
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.959
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.790
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.960
10/21 03:00:10 - mmengine - INFO - 
+---------------+-------+--------+--------+-------+-------+-------+
| category      | mAP   | mAP_50 | mAP_75 | mAP_s | mAP_m | mAP_l |
+---------------+-------+--------+--------+-------+-------+-------+
| cell          | 0.986 | 0.99   | 0.99   | nan   | 0.968 | 0.987 |
| table         | 0.972 | 0.993  | 0.99   | nan   | nan   | 0.972 |
| row           | 0.96  | 0.988  | 0.969  | nan   | nan   | 0.96  |
| column        | 0.983 | 0.99   | 0.99   | nan   | nan   | 0.983 |
| merged_cell   | 0.906 | 0.944  | 0.933  | nan   | nan   | 0.906 |
| overflow_cell | 0.611 | 0.735  | 0.687  | nan   | 0.603 | 0.612 |
| header_row    | 0.889 | 0.954  | 0.946  | nan   | nan   | 0.889 |
| header_column | 0.901 | 0.972  | 0.967  | nan   | nan   | 0.901 |
+---------------+-------+--------+--------+-------+-------+-------+
10/21 03:00:10 - mmengine - INFO - bbox_mAP_copypaste: 0.897 0.946 0.934 -1.000 0.786 0.901
10/21 03:00:12 - mmengine - INFO - Epoch(val) [40][215/215]    coco/cell_precision: 0.9860  coco/table_precision: 0.9720  coco/row_precision: 0.9600  coco/column_precision: 0.9830  coco/merged_cell_precision: 0.9060  coco/overflow_cell_precision: 0.6110  coco/header_row_precision: 0.8890  coco/header_column_precision: 0.9010  coco/bbox_mAP: 0.8970  coco/bbox_mAP_50: 0.9460  coco/bbox_mAP_75: 0.9340  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: 0.7860  coco/bbox_mAP_l: 0.9010  data_time: 0.0779  time: 0.9749

꽤나 좋은 결과지만 실제로는 헤더 행, 헤더 열에 인식 작은 어려움과 병합된 셀과 오버플로 셀이 있는 경우 여전히 행 인식에 어려움 있음, table도 마찬가지
추가 학습 함


44에폭까지 학습하고(너무 느린 1에폭, 1시간 30분 정도 걸려서 멈춤)
실제로 활용해본 결과
헤더 행과 헤더 열은 그럭저럭 잘 인식 되는 듯
다만 헤더 열이 좁거나 큰 경우 인식을 어려워 함 <- 그래서 첫번째 헤더 열의 넓이를 랜덤으로 조정하게 함

여전히 병합된 셀이 있는 행은 인식이 어려움, 그런데 임계점 낮추니 꽤 괜찮게 보이긴 함

정모형 시간표는 전부 오버플로? 되어 있는 이상한 시간표, 그래서인지 오버플로 셀이란 것 자체를 구분 못하는 듯?
은희 시간표는 헤더 열 인식 문제와 셀을 잘 인식 못하는 경우 많음

정모형 시간표와 은희 시간표 공통 특징이 수업이 있는 셀에만 색깔이 지정 되어 있다는 것, 데이터셋에는 오직 흰 셀, 검은 셀, 혹은 파스텔 색 중 하나를 골라서 그런 듯 <- 색의 색깔을 일부에도 부여할 수 있도록 수정함, 그래도 여전히 흰 셀이나 검은 셀만 있는 표도 제작 하게 함


은재누나 시간표는 실제 카메라로 찍은 기울어진 시간표에 중간이 분리되어 있는 시간표지만 행, 열은 85%, 셀 모두 정확도 90% 이상, 


이후로 모든 시간표에 색깔이 부여될 수 있도록 조정한 후, 헤더 열 고친 상태로 데이터셋 5000개 생산, 이후 전이학습
학습률 1/10으로 낮추고, 부족한 클래스에 가중치 부여하는 값 beta를 1.0으로 조정함



 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.863
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.934
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.905
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.559
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.775
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.865
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.933
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.934
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.934
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.633
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.857
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.935
10/22 01:35:08 - mmengine - INFO - 
+---------------+-------+--------+--------+-------+-------+-------+
| category      | mAP   | mAP_50 | mAP_75 | mAP_s | mAP_m | mAP_l |
+---------------+-------+--------+--------+-------+-------+-------+
| cell          | 0.966 | 0.989  | 0.986  | 0.559 | 0.908 | 0.973 |
| table         | 0.956 | 1.0    | 1.0    | nan   | nan   | 0.956 |
| row           | 0.771 | 0.909  | 0.785  | nan   | nan   | 0.771 |
| column        | 0.938 | 0.972  | 0.963  | nan   | nan   | 0.938 |
| merged_cell   | 0.936 | 0.964  | 0.958  | nan   | 0.901 | 0.936 |
| overflow_cell | 0.68  | 0.808  | 0.743  | nan   | 0.515 | 0.681 |
| header_row    | 0.906 | 0.971  | 0.959  | nan   | nan   | 0.906 |
| header_column | 0.763 | 0.858  | 0.848  | nan   | nan   | 0.763 |
+---------------+-------+--------+--------+-------+-------+-------+
10/22 01:35:08 - mmengine - INFO - bbox_mAP_copypaste: 0.863 0.934 0.905 0.559 0.775 0.865
10/22 01:35:08 - mmengine - INFO - Epoch(val) [5][36/36]    coco/cell_precision: 0.9660  coco/table_precision: 0.9560  coco/row_precision: 0.7710  coco/column_precision: 0.9380  coco/merged_cell_precision: 0.9360  coco/overflow_cell_precision: 0.6800  coco/header_row_precision: 0.9060  coco/header_column_precision: 0.7630  coco/bbox_mAP: 0.8630  coco/bbox_mAP_50: 0.9340  coco/bbox_mAP_75: 0.9050  coco/bbox_mAP_s: 0.5590  coco/bbox_mAP_m: 0.7750  coco/bbox_mAP_l: 0.8650  data_time: 0.0826  time: 0.9664

Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.887
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.949
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.925
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.663
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.812
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.889
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.942
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.943
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.943
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.717
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.856
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.944
10/22 02:23:15 - mmengine - INFO - 
+---------------+-------+--------+--------+-------+-------+-------+
| category      | mAP   | mAP_50 | mAP_75 | mAP_s | mAP_m | mAP_l |
+---------------+-------+--------+--------+-------+-------+-------+
| cell          | 0.97  | 0.989  | 0.988  | 0.663 | 0.923 | 0.976 |
| table         | 0.971 | 1.0    | 1.0    | nan   | nan   | 0.971 |
| row           | 0.791 | 0.92   | 0.805  | nan   | nan   | 0.791 |
| column        | 0.953 | 0.981  | 0.972  | nan   | nan   | 0.953 |
| merged_cell   | 0.955 | 0.974  | 0.973  | nan   | 0.966 | 0.955 |
| overflow_cell | 0.751 | 0.877  | 0.819  | nan   | 0.547 | 0.752 |
| header_row    | 0.926 | 0.978  | 0.972  | nan   | nan   | 0.926 |
| header_column | 0.786 | 0.872  | 0.868  | nan   | nan   | 0.786 |
+---------------+-------+--------+--------+-------+-------+-------+
10/22 02:23:15 - mmengine - INFO - bbox_mAP_copypaste: 0.887 0.949 0.925 0.663 0.812 0.889
10/22 02:23:16 - mmengine - INFO - Epoch(val) [10][36/36]    coco/cell_precision: 0.9700  coco/table_precision: 0.9710  coco/row_precision: 0.7910  coco/column_precision: 0.9530  coco/merged_cell_precision: 0.9550  coco/overflow_cell_precision: 0.7510  coco/header_row_precision: 0.9260  coco/header_column_precision: 0.7860  coco/bbox_mAP: 0.8870  coco/bbox_mAP_50: 0.9490  coco/bbox_mAP_75: 0.9250  coco/bbox_mAP_s: 0.6630  coco/bbox_mAP_m: 0.8120  coco/bbox_mAP_l: 0.8890  data_time: 0.0887  time: 0.9427

Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.889
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.953
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.929
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.645
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.820
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.891
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.941
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.943
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.943
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.667
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.885
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.943
10/22 03:12:18 - mmengine - INFO - 
+---------------+-------+--------+--------+-------+-------+-------+
| category      | mAP   | mAP_50 | mAP_75 | mAP_s | mAP_m | mAP_l |
+---------------+-------+--------+--------+-------+-------+-------+
| cell          | 0.971 | 0.989  | 0.989  | 0.645 | 0.923 | 0.976 |
| table         | 0.966 | 1.0    | 1.0    | nan   | nan   | 0.966 |
| row           | 0.793 | 0.925  | 0.812  | nan   | nan   | 0.793 |
| column        | 0.948 | 0.974  | 0.971  | nan   | nan   | 0.948 |
| merged_cell   | 0.952 | 0.976  | 0.974  | nan   | 0.985 | 0.952 |
| overflow_cell | 0.756 | 0.873  | 0.818  | nan   | 0.552 | 0.756 |
| header_row    | 0.916 | 0.978  | 0.971  | nan   | nan   | 0.916 |
| header_column | 0.824 | 0.906  | 0.898  | nan   | nan   | 0.824 |
+---------------+-------+--------+--------+-------+-------+-------+
10/22 03:12:18 - mmengine - INFO - bbox_mAP_copypaste: 0.889 0.953 0.929 0.645 0.820 0.891
10/22 03:12:19 - mmengine - INFO - Epoch(val) [15][36/36]    coco/cell_precision: 0.9710  coco/table_precision: 0.9660  coco/row_precision: 0.7930  coco/column_precision: 0.9480  coco/merged_cell_precision: 0.9520  coco/overflow_cell_precision: 0.7560  coco/header_row_precision: 0.9160  coco/header_column_precision: 0.8240  coco/bbox_mAP: 0.8890  coco/bbox_mAP_50: 0.9530  coco/bbox_mAP_75: 0.9290  coco/bbox_mAP_s: 0.6450  coco/bbox_mAP_m: 0.8200  coco/bbox_mAP_l: 0.8910  data_time: 0.0764  time: 0.8155


Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.915
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.958
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.941
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.767
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.915
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.916
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.962
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.962
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.962
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.767
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.925
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.962
10/22 09:31:11 - mmengine - INFO - 
+---------------+-------+--------+--------+-------+-------+-------+
| category      | mAP   | mAP_50 | mAP_75 | mAP_s | mAP_m | mAP_l |
+---------------+-------+--------+--------+-------+-------+-------+
| cell          | 0.977 | 0.989  | 0.989  | 0.767 | 0.929 | 0.979 |
| table         | 0.985 | 1.0    | 1.0    | nan   | nan   | 0.985 |
| row           | 0.909 | 0.972  | 0.93   | nan   | nan   | 0.909 |
| column        | 0.981 | 0.988  | 0.988  | nan   | nan   | 0.981 |
| merged_cell   | 0.92  | 0.959  | 0.932  | nan   | nan   | 0.92  |
| overflow_cell | 0.729 | 0.838  | 0.776  | nan   | 0.9   | 0.729 |
| header_row    | 0.941 | 0.988  | 0.987  | nan   | nan   | 0.941 |
| header_column | 0.882 | 0.932  | 0.928  | nan   | nan   | 0.882 |
+---------------+-------+--------+--------+-------+-------+-------+
10/22 09:31:11 - mmengine - INFO - bbox_mAP_copypaste: 0.915 0.958 0.941 0.767 0.915 0.916
10/22 09:31:11 - mmengine - INFO - Epoch(val) [25][72/72]    coco/cell_precision: 0.9770  coco/table_precision: 0.9850  coco/row_precision: 0.9090  coco/column_precision: 0.9810  coco/merged_cell_precision: 0.9200  coco/overflow_cell_precision: 0.7290  coco/header_row_precision: 0.9410  coco/header_column_precision: 0.8820  coco/bbox_mAP: 0.9150  coco/bbox_mAP_50: 0.9580  coco/bbox_mAP_75: 0.9410  coco/bbox_mAP_s: 0.7670  coco/bbox_mAP_m: 0.9150  coco/bbox_mAP_l: 0.9160  data_time: 0.0702  time: 0.8950